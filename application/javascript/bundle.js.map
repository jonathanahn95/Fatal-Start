{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/background.js","webpack:///./lib/bullet.js","webpack:///./lib/dragon_ball.js","webpack:///./lib/enemy.js","webpack:///./lib/fatal_start.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/goku.js","webpack:///./lib/moving_object.js","webpack:///./lib/score.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;AAKA;;;;;;;;;;;;;;;ACvDA;AAAA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;AAKD,oCAAoC;AACpC;AACA;;;;;;;;;;;;;;;;;;;;;;AC3B+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,0EAAiC,0CAA0C;AAC3E;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,0EAAgC,wHAA0E;AAC1G;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC,oEAA2B,oGAAsD;AACjF;AACA;;AAEA;AACA,sBAAsB,sBAAsB;AAC5C,+BAA+B,kBAAkB;AACjD;AACA;;AAEA;AACA;AACA,qBAAqB,mBAAmB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;ACpJA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA,yEAAgC,2CAA2C;AAC3E;AACA;;;AAGA;;;;;AAKA;;;;;;;;;;;;;;;AChGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;AClCA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/fatal_start.js\");\n","class Background {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.image = new Image();\n    this.image.src = 'assets/wall.jpg';\n    this.image.onload = () => {\n      ctx.drawImage(this.image, 0, 0, 600, 800);\n    };\n    this.frames = 0;\n  }\n\n  draw(ctx) {\n\n    if (this.frames >= 600){\n      this.frames = 0;\n    }\n    this.frames += 6;\n    // ctx.drawImage(this.image,0,  -this.frames,600, 800);\n    // ctx.drawImage(this.image,0,600 - this.frames, 600, 800);\n\n    ctx.drawImage(this.image,0, 0, 600, 800);\n\n  }\n\n}\n\nexport default Background;\n","import DragonBall from './dragon_ball';\n\nclass Bullet extends DragonBall {\n    constructor(options){\n      options.radius = 60;\n      super(options);\n      this.pos = options.pos;\n      this.vel = options.vel;\n      this.ctx = options.ctx;\n      this.game = options.ctx;\n    }\n\n    move(){\n      this.pos[0] += this.vel[0];\n      this.pos[1] += this.vel[1];\n    }\n\n    draw(ctx) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc( this.pos[0], this.pos[1], this.radius, 0, 2*Math.PI, true);\n      ctx.fillStyle = \"red\";\n      ctx.fill();\n      ctx.restore();\n    }\n\n    remove(){\n      debugger\n      this.game.remove(this);\n    }\n\n    collideWith(otherObj) {\n      debugger\n      otherObj.remove();\n    }\n}\n\n\n\nexport default Bullet;\n","import * as Util  from \"./util\";\n\nconst DEFAULTS = {\n  COLOR: \"#505050\",\n  RADIUS: 25,\n  // SPEED: 8\n};\n\n\nclass DragonBall  {\n  constructor(options){\n    this.pos = options.pos;\n    this.vel = options.vel || [(1 * Math.random()), (Math.random() * 1.5)];\n    this.radius = options.radius || DEFAULTS.RADIUS;\n    this.color = DEFAULTS.COLOR;\n    this.game = options.game;\n    this.ctx = options.ctx;\n    this.sX = 0;\n    this.image = new Image();\n    this.image.src = 'assets/pix-drag.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 50 , this.pos[1] - 30 , 160, 160);\n\n  }\n\n  collideWith(otherObj) {\n    // debugger\n    otherObj.remove();\n  }\n\n\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n\n  isCollidedWith(otherObj) {\n     // debugger\n     const centerDist = Util.dist(this.pos, otherObj.pos);\n     return centerDist < this.radius + otherObj.radius;\n   }\n}\n\nexport default DragonBall;\n","import DragonBall from './dragon_ball';\nimport Bullet from './bullet';\nimport * as Util from './util';\n\nclass Enemy extends DragonBall {\n  constructor(options) {\n    options.radius = 60;\n    options.vel = [0, 0.7];\n    super(options);\n    this.ctx = options.ctx;\n    this.pos = options.pos\n    this.sX = 0;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/freeza.jpg';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n    this.game = options.game;\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n  }\n\n  draw() {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 125 , this.pos[1] - 90 , 250, 250);\n  }\n\n  remove(){\n    this.game.remove(this);\n  }\n\n  isCollidedWith(otherObj) {\n     debugger\n     const centerDist = Util.dist(this.pos, otherObj.pos);\n     return centerDist < this.radius + otherObj.radius;\n   }\n\n  collideWith(otherObj) {\n    debugger\n    if (otherObj instanceof Bullet){\n      this.remove();\n      otherObj.remove();\n    }\n  }\n\n\n\n}\n\n\n\n\nexport default Enemy;\n","// import MovingObject from './moving_object';\nimport Game from './game';\nimport GameView from './game_view';\n// import Character from './character';\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n  window.frames = 0;\n  const canvasEl = document.getElementById('canvas');\n  const ctx = canvasEl.getContext('2d');\n\n\n  // const game = new Game(ctx);\n  // const char = new Character();\n  // char.drawChar(ctx);\n\n  const game = new Game(ctx);\n  new GameView(game, ctx).start();\n\n});\n\n\n\n\n//   const mo = new MovingObject(  { pos: [280, 280], vel: [10, 10], radius: 5, color: \"#00FF00\"}\n// );\n//   mo.draw(ctx);\n","import { randomPosition, wrap } from \"./util\";\nimport MovingObject from './moving_object';\nimport DragonBall from './dragon_ball';\nimport Goku from './goku';\nimport Enemy from './enemy';\nimport Background from './background';\nimport Score from './score';\nimport Bullet from './bullet';\n\nclass Game {\n  constructor(ctx){\n    this.background = new Background(ctx);\n    this.players = [];\n    this.enemies = [];\n    this.dragonBalls = [];\n    this.bullets = [];\n    this.width = 600;\n    this.height = 800;\n    this.NUM_DRAGON_BALLS = 4;\n    this.NUM_ENEMIES = 2;\n    // this.NUM_BULLETS = 13;\n    this.ctx = ctx;\n    this.initialSetup();\n    this.score = new Score(0);\n  }\n\n\n  initialSetup() {\n    this.ctx.clearRect(0,0, 800, 800);\n    this.addDragonBalls();\n    this.players.push(new Goku( {pos: [300,600], game: this, ctx: this.ctx} ));\n    this.addEnemies();\n    // debugger\n  }\n\n  addDragonBalls() {\n    // if (this.dragonBalls.length ===4)return;\n    for (var i = 0; i < this.NUM_DRAGON_BALLS; i++) {\n      this.add(new DragonBall( { pos: randomPosition(this.width, this.height), game: this, ctx: this.ctx }) );\n    }\n  }\n\n  addEnemies() {\n    for (var i = 0; i < this.NUM_ENEMIES; i++) {\n      this.add(new Enemy( { pos: randomPosition(this.width, 200), ctx: this.ctx }) );\n    }\n  }\n\n  // addBullets() {\n  //   for (var i = 0; i < this.NUM_BULLETS; i++) {\n  //     this.add(new Bullet( { pos: [120, 470] }));\n  //   }\n  // }\n\n  checkCollisions() {\n    const allObj = this.allObjects();\n      for (var i = 0; i < allObj.length; i++) {\n      for (let j = 0; j < allObj.length; j++) {\n        const obj1 = allObj[0];\n        const obj2 = allObj[j];\n        if (obj1.constructor.name === 'Goku' && obj2.constructor.name === 'DragonBall' && obj1.isCollidedWith(obj2)){\n          debugger\n          obj1.collideWith(obj2);\n          return;\n        } else if ((obj1.constructor.name === 'Bullet' && obj2.constructor.name || obj1.constructor.name === 'Enemy' && obj2.constructor.name === 'Bullet') && obj1.isCollidedWith(obj2)){\n          debugger\n          obj1.collideWith(obj2);\n        }\n    }\n  }\n  }\n\n  add(obj){\n\n// bullet.true\n    // if (obj instanceof Bullet){\n    //   this.bullets.push(obj);\n    //   debugger\n    // } else if (obj.constructor.name === 'DragonBall' && obj.constructor.name !== 'Enemy' ) {\n    //   this.dragonBalls.push(obj);\n    //   debugger\n    // }  else if (obj instanceof Enemy) {\n    //   this.enemies.push(obj);\n    //   debugger\n    // }\n    // debugger\n\n    // debugger\n    if(obj instanceof Enemy){\n      this.enemies.push(obj);\n    } else if (obj instanceof Bullet){\n      this.bullets.push(obj);\n      debugger\n    } else if (obj instanceof DragonBall){\n      this.dragonBalls.push(obj);\n      // debugger\n    }\n  }\n\n  remove(obj) {\n    if (obj instanceof DragonBall) {\n      this.dragonBalls.splice(this.dragonBalls.indexOf(obj), 1);\n      this.score.score += 1;\n    } else if (obj instanceof Enemy) {\n      debugger\n      this.enemies.splice(this.enemies.indexOf(obj), 1);\n\n    }\n  }\n\n  allObjects() {\n    return [].concat(this.players, this.dragonBalls, this.bullets, this.enemies);\n  }\n\n  draw() {\n    this.ctx.clearRect(0,0, 800, 800);\n    this.background.draw(this.ctx);\n    this.score.draw(this.ctx);\n    console.log(this.allObjects());\n\n    this.allObjects().forEach( obj => {\n      obj.draw(this.ctx);\n    });\n  }\n\n  step() {\n    this.checkCollisions();\n    this.spawnDragonBalls();\n    this.allObjects().forEach( obj => {\n      obj.move();\n    });\n  }\n\n\n  spawnDragonBalls() {\n    if ( this.dragonBalls.length <= 2 ) {\n      this.addDragonBalls();\n    }\n  }\n\n  wrap(pos) {\n    return [\n      wrap(pos[0], 600), wrap(pos[1], 800)\n    ];\n  }\n\n}\n\nexport default Game;\n","class GameView {\n  constructor(game, ctx){\n    this.game = game;\n    this.ctx = ctx;\n  }\n\n  start() {\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n   const timeDelta = time - this.lastTime;\n   this.game.step(timeDelta);\n   this.game.draw(this.ctx);\n   this.lastTime = time;\n\n   // every call to animate requests causes another call to animate\n   requestAnimationFrame(this.animate.bind(this));\n   }\n}\n\n\n\nexport default GameView;\n","import DragonBall from './dragon_ball';\nimport Bullet from './bullet';\nimport * as Util from './util';\n\nclass Goku extends DragonBall {\n  constructor(options) {\n    options.radius = 60;\n    options.vel = [0,0];\n    super(options);\n    this.ctx = options.ctx;\n    this.sX = 0;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/flying_goku.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n    this.game = options.game;\n    this.bindKeyHandlers();\n  }\n\n  bindKeyHandlers() {\n    key('w', () => {\n      this.vel = [0, -6];\n      // this.pos[1] -= 10;\n      this.move();\n    });\n\n    key('s', () => {\n      this.vel = [0, 6];\n      // this.pos[1] += 10;\n      this.move();\n    });\n\n    key('a', () => {\n      this.vel = [-6, 0];\n      // this.pos[0] -= 10;\n      this.move();\n    });\n\n    key('d', () => {\n      this.vel = [6, 0];\n      // this.pos[0] += 10;\n\n      this.move();\n    });\n\n    key('j', () => {\n      this.fireBullet();\n    });\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    window.frames += 30;\n    this.pos = this.game.wrap(this.pos);\n  }\n\n  draw() {\n\n    switch(window.frames) {\n      case 0:\n      this.sX = 0;\n      break;\n      case 600:\n      this.sX = 1200;\n      break;\n      case 1200:\n      this.sX = 0;\n      window.frames = 0;\n      break;\n      default:\n      break;\n    }\n    if (window.frames > 1200){\n      window.frames = 0;\n    }\n\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 125 , this.pos[1] - 90 , 250, 250);\n  }\n\n\n\n  fireBullet() {\n    debugger\n    const bullet = new Bullet( {pos: this.pos, vel: [0,-6], ctx: this.ctx } );\n    this.game.add(bullet);\n  }\n\n\n}\n\n\n\n\nexport default Goku;\n","import * as Util  from \"./util\";\n\nconst DEFAULTS = {\n  COLOR: \"#d1472b\",\n  RADIUS: 7,\n  SPEED: 7\n};\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.pos || [-5,0];\n    this.radius = options.radius || DEFAULTS.RADIUS;\n    this.color = DEFAULTS.COLOR;\n  }\n\n\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc( this.pos[0], this.pos[1], this.radius, 0, 2*Math.PI, true);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n  }\n\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n  }\n}\n\n\n\nexport default MovingObject;\n","class Score {\n  constructor(score){\n    this.score = score;\n  }\n\n  draw(ctx) {\n\n    ctx.fillText(\"dragonballs: \"+this.score , 15, 40);\n    ctx.font = \"36px Saiyan Sans\";\n    ctx.fillStyle = \"yellow\";\n  }\n}\n\nexport default Score;\n","\n/// in charge of giving direction\n// export const randomVec = (length) => {\n//   const deg = 2 * Math.PI * Math.random();\n//   return scale([Math.sin(deg), Math.cos(deg)], length);\n// };\n//\n// export const test = function() {\n//   console.log(\"Hello\");\n// };\n//\n// export const scale = (vec, m) => {\n//   return [vec[0] * m, vec[1] * m];\n// };\n//\n// // Normalize the length of the vector to 1, maintaining direction.\n// export const dir = vec => {\n//   const normVec = norm(vec);\n//   return scale(vec, 1 / normVec);\n// };\n//\n//\n// // Find the length of the vector.\n// export const norm = vec => {\n//   return dist([0,0], vec);\n// };\n//\n//\n\nexport const randomPosition = (maxX, maxY) => {\n  // debugger\n  const x = maxX * Math.random();\n  const y = maxY * Math.random();\n  return [x, y];\n};\n\nexport const wrap = (coord, max) => {\n  if (coord < 0){\n    return max - (coord % max);\n  } else if (coord > max) {\n    return coord % max;\n  } else {\n    return coord;\n  }\n};\n//\n/// finds the distance between two objects\nexport const dist = (pos1, pos2) => {\n  return Math.sqrt(\n    Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    // doing the same thing as\n    // let dx = pos1[0] - pos2[0]\n    // let dy = pos1[1] - pos2[1]\n    //\n    // Math.sqrt((dx * dx) + (dy * dy))\n  );\n};\n"],"sourceRoot":""}
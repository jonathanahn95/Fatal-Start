{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/background.js","webpack:///./lib/bullet.js","webpack:///./lib/dragon_ball.js","webpack:///./lib/enemy.js","webpack:///./lib/enemy_bullet.js","webpack:///./lib/fatal_start.js","webpack:///./lib/freiza.js","webpack:///./lib/freiza_bullet.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/goku.js","webpack:///./lib/hp.js","webpack:///./lib/instructions.js","webpack:///./lib/krillin.js","webpack:///./lib/krillin_bullet.js","webpack:///./lib/majin_bu.js","webpack:///./lib/moving_object.js","webpack:///./lib/score.js","webpack:///./lib/sensu_bean.js","webpack:///./lib/spirt_bomb.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;AC1CA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+EAAqC,2DAA2D;AAChG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;AC9BA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;ACzCD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gFAAsC,2DAA2D;AACjG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAA2B,8DAA8D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mFAAwC,oIAAsF;AAC9H;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,qBAAqB,mBAAmB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mBAAmB,2BAA2B;AAC9C,0EAAgC,2IAA6F;AAC7H;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,sEAA6B,iJAAmG;AAChI;AACA;AACA,KAAK;AACL,qBAAqB,OAAO;AAC5B,yEAA+B,iJAAmG;AAClI;AACA;AACA,KAAK;AACL,qBAAqB,OAAO;AAC5B,0EAA+B,iJAAmG;AAClI;AACA;AACA,KAAK;AACL,qBAAqB,OAAO;AAC5B,wEAA8B,iJAAmG;AACjI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;ACzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oFAA0C,4DAA4D;AACtG;AACA,OAAO;AACP,6EAAoC,4DAA4D;AAChG;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;AAKA;;;;;;;;;;;;;AClIA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iFAAuC,2DAA2D;AAClG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;;;AAIA;;;;;;;;;;;;;ACtDA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/fatal_start.js\");\n","class Background {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.image = new Image();\n    this.image.src = 'assets/images/wall.jpg';\n    this.image.onload = () => {\n      ctx.drawImage(this.image, 0, 0, 1000, 800);\n    };\n    this.frames = 0;\n  }\n\n  draw(ctx) {\n\n    if (this.frames >= 1000){\n      this.frames = 0;\n    }\n    this.frames += 6;\n    // ctx.drawImage(this.image,0,  -this.frames,600, 800);\n    // ctx.drawImage(this.image,0,600 - this.frames, 600, 800);\n    ctx.drawImage(this.image,0, 0, 1000, 800);\n\n  }\n\n}\n\nexport default Background;\n","import DragonBall from './dragon_ball';\nimport MovingObject from './moving_object';\nimport * as Util  from \"./util\";\n\n\nclass Bullet extends MovingObject {\n  constructor(options){\n    options.radius = 20;\n    super(options);\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.isWrappable = false;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/blast1.jpg';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    if (this.game.isOutOfBounds(this.pos)) {\n       if (this.isWrappable) {\n         this.pos = this.game.wrap(this.pos);\n       } else {\n         this.remove();\n       }\n     }\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 20 , this.pos[1] - 30 , 250, 250);\n  }\n\n\n}\n\n\n\nexport default Bullet;\n","import * as Util  from \"./util\";\nimport MovingObject from './moving_object';\n\nconst DEFAULTS = {\n  COLOR: \"#505050\",\n  RADIUS: 25,\n};\n\n\nclass DragonBall extends MovingObject  {\n  constructor(options){\n    super(options);\n    this.isWrappable = false;\n    this.image = new Image();\n    this.score = options.score;\n    this.image.src = 'assets/images/pix-drag.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 50 , this.pos[1] - 30 , 120, 120);\n  }\n\n  collideWith(otherObj) {\n    this.score.score++;\n    otherObj.remove();\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n\n  isCollidedWith(otherObj) {\n     const centerDist = Util.dist(this.pos, otherObj.pos);\n     return centerDist < this.radius + otherObj.radius;\n   }\n}\n\nexport default DragonBall;\n","import DragonBall from './dragon_ball';\nimport EnemyBullet from './enemy_bullet';\nimport MovingObject from './moving_object';\nimport * as Util from './util';\nimport SensuBean from './sensu_bean';\n\nclass Enemy extends MovingObject {\n  constructor(options) {\n    options.radius = 30;\n    super(options);\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.pos = options.pos;\n    this.sX = 0;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/vegeta.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n    this.game = options.game;\n    this.goku = options.goku;\n    this.sX = 0;\n  }\n\n  move(){\n    if (this.goku.pos[0] > this.pos[0]) {\n      this.pos[0] += this.vel[0];\n    }\n    else if (this.goku.pos[0] < this.pos[0]) {\n      this.pos[0] -= this.vel[0];\n    }\n     if (this.goku.pos[1] > this.pos[1]) {\n      this.pos[1] += this.vel[1];\n    }\n    else if (this.goku.pos[1] < this.pos[1]) {\n      this.pos[1] -= this.vel[1];\n    }\n\n    this.pos = this.game.wrap(this.pos);\n    window.frames1 += 1;\n  }\n\n  fireBullet() {\n    const bullet = new EnemyBullet( {pos: this.pos, vel: [0,3], ctx: this.ctx, game: this.game } );\n    this.game.add(bullet);\n  }\n\n  draw(ctx) {\n    switch(window.frames1) {\n      case 170:\n      this.fireBullet();\n      break;\n      default:\n      break;\n    }\n\n    if (window.frames1 > 170){\n      window.frames1 = 0;\n    }\n    this.ctx.drawImage(this.image, this.sX, 0, 800, 800, this.pos[0] - 55 , this.pos[1] - 60 , 500, 500);\n  }\n\n  remove(){\n    this.game.remove(this);\n  }\n}\n\nexport default Enemy;\n","import DragonBall from './dragon_ball';\nimport MovingObject from './moving_object';\nimport * as Util  from \"./util\";\n\n\nclass EnemyBullet extends MovingObject {\n  constructor(options){\n    options.radius = 20;\n    super(options);\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.isWrappable = false;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/enemy_bullet.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 20 , this.pos[1] - 10 , 250, 250);\n  }\n\n\n}\n\n\n\nexport default EnemyBullet;\n","import Game from './game';\nimport GameView from './game_view';\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n  window.intro = false;\n\n  const startGame = () => {\n    window.frames = 0;\n    window.frames1 = 0;\n    window.frames2 = 0;\n    const canvasEl = document.getElementById('canvas');\n    const ctx = canvasEl.getContext('2d');\n\n    const game = new Game(ctx);\n    new GameView(game, ctx).start();\n  };\n\n  var modal = document.getElementById('myModal');\n\n  // Get the <span> element that closes the modal\n  var span = document.getElementsByClassName(\"close\")[0];\n\n  // When the user open browser, open the modal\n  window.onload = function() {\n    modal.style.display = \"block\";\n  };\n\n  // When the user clicks on <span> (x), close the modal\n  span.onclick = function() {\n    modal.style.display = \"none\";\n  };\n\n  span.onclick = function(event) {\n      modal.style.display = 'none';\n      window.intro = true;\n      if ( window.intro) {\n        startGame();\n      }\n  };\n});\n","import DragonBall from './dragon_ball';\nimport FreizaBullet from './freiza_bullet';\nimport MovingObject from './moving_object';\nimport * as Util from './util';\nimport SensuBean from './sensu_bean';\nimport Enemy from './enemy';\n\n\nclass Freiza extends Enemy {\n  constructor(options) {\n    options.radius = 25;\n    super(options);\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.pos = options.pos;\n    this.sX = 0;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/frieza.jpg';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n    this.game = options.game;\n    this.goku = options.goku;\n    this.sX = 0;\n  }\n\n  fireBullet() {\n    const bullet = new FreizaBullet( {pos: this.pos, vel: [0,3], ctx: this.ctx, game: this.game } );\n    this.game.add(bullet);\n  }\n\n  draw(ctx) {\n    switch(window.frames1) {\n      case 170:\n      this.fireBullet();\n      break;\n      default:\n      break;\n    }\n    if (window.frames1 > 170){\n      window.frames1 = 0;\n    }\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 45 , this.pos[1] - 130 , 950, 1150);\n  }\n}\n\nexport default Freiza;\n","import DragonBall from './dragon_ball';\nimport MovingObject from './moving_object';\nimport * as Util  from \"./util\";\nimport EnemyBullet from './enemy_bullet';\n\n\nclass FreizaBullet extends EnemyBullet {\n  constructor(options){\n    options.radius = 20;\n    super(options);\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.isWrappable = false;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = './assets/images/spirit-bomb.jpg';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 50 , this.pos[1] - 30 , 250, 250);\n  }\n}\n\n\n\nexport default FreizaBullet;\n","import { randomPosition, wrap } from \"./util\";\nimport MovingObject from './moving_object';\nimport DragonBall from './dragon_ball';\nimport Goku from './goku';\nimport Enemy from './enemy';\nimport Background from './background';\nimport Score from './score';\nimport Bullet from './bullet';\nimport EnemyBullet from './enemy_bullet';\nimport Hp from './hp';\nimport SensuBean from './sensu_bean';\nimport Instructions from './instructions';\nimport SpirtBomb from './spirt_bomb';\nimport Krillin from './krillin';\nimport MajinBu from './majin_bu';\nimport Freiza from './freiza';\nimport KrillinBullet from './krillin_bullet';\nimport FreizaBullet from './freiza_bullet';\n\nclass Game {\n  constructor(ctx){\n    this.ctx = ctx;\n    this.background = new Background(ctx);\n    this.players = [];\n    this.enemies = [];\n    this.dragonBalls = [];\n    this.bullets = [];\n    this.enemyBullets = [];\n    this.sensuBeans = [];\n    this.width = 900;\n    this.height = 600;\n    this.NUM_DRAGON_BALLS = 5;\n    this.score = new Score(0);\n    this.goku = new Goku( {pos: [450,450], game: this, ctx: this.ctx , score: this.score} );\n    this.hp = new Hp(this.goku);\n    this.initialSetup();\n    this.audio = new Audio();\n    this.audio.src = './assets/audio/rock_the_dragon.mp3';\n    this.audio.play();\n    this.gameOver = false;\n    this.bindKeyHandlers();\n  }\n\n  bindKeyHandlers(){\n    key('m', () => {\n     if (this.audio.paused) {\n       this.audio.play();\n     } else {\n       this.audio.pause();\n     }\n   });\n  }\n\n  initialSetup() {\n    this.ctx.clearRect(0,0, 800, 800);\n    this.addDragonBalls();\n    this.players.push(this.goku);\n    this.addEnemies();\n  }\n\n  addSensuBean() {\n    if ( this.score.dragonBalls !== 0 && this.sensuBeans.length >= 0 && this.sensuBeans.length < 1 && this.score.dragonBalls % 5 === 0){\n      const sensuBean = new SensuBean( { pos: randomPosition(this.width, this.height), vel: [0,-5], ctx: this.ctx, game: this} );\n      setInterval(function(){\n        sensuBean.game.add(sensuBean);\n      }, 5000);\n    }\n  }\n\n  checkCollisions() {\n    const allObj = this.allObjects();\n      for (var i = 0; i < allObj.length; i++) {\n      for (let j = 0; j < allObj.length; j++) {\n        const obj1 = allObj[i];\n        const obj2 = allObj[j];\n        if (obj1 !== obj2 && obj1 instanceof Goku && obj2 instanceof DragonBall && obj1.isCollidedWith(obj2)){\n          obj1.collideWith(obj2);\n          return;\n        } else if (obj1 !== obj2 && obj1 instanceof Bullet && obj2 instanceof Enemy && obj1.isCollidedWith(obj2)){\n          obj1.collideWith(obj2);\n          obj2.collideWith(obj1);\n        } else if (obj1 !== obj2 && obj1 instanceof Goku && obj2 instanceof EnemyBullet && obj1.isCollidedWith(obj2)){\n          obj1.collideWith(obj2);\n          obj2.collideWith(obj1);\n        } else if (obj1 !== obj2 && obj1 instanceof Goku && obj2 instanceof Enemy && obj1.isCollidedWith(obj2)){\n          obj1.collideWith(obj2);\n        } else if (obj1 !== obj2 && obj1 instanceof Goku && obj2 instanceof SensuBean && obj1.isCollidedWith(obj2)){\n          obj1.collideWith(obj2);\n        }\n      }\n    }\n  }\n\n  add(obj){\n    if(obj instanceof Enemy){\n      this.enemies.push(obj);\n    } else if (obj instanceof Bullet){\n      this.bullets.push(obj);\n    } else if (obj instanceof DragonBall){\n      this.dragonBalls.push(obj);\n    } else if (obj instanceof EnemyBullet){\n      this.enemyBullets.push(obj);\n    } else if (this.sensuBeans.length === 0 && obj instanceof SensuBean){\n      this.sensuBeans.push(obj);\n    }\n  }\n\n  remove(obj) {\n    if (obj instanceof DragonBall) {\n      this.dragonBalls.splice(this.dragonBalls.indexOf(obj), 1);\n    } else if (this.goku.lives === 0) {\n      this.players.splice(this.players.indexOf(obj), 1);\n      alert('Game Over');\n    } else if (obj instanceof Enemy) {\n      this.enemies.splice(this.enemies.indexOf(obj), 1);\n    } else if (obj instanceof Bullet) {\n      this.bullets.splice(this.bullets.indexOf(obj), 1);\n    } else if (obj instanceof EnemyBullet) {\n      this.enemyBullets.splice(this.enemyBullets.indexOf(obj), 1);\n    } else if (obj instanceof SensuBean) {\n      this.sensuBeans.splice(this.sensuBeans.indexOf(obj),1);\n    }\n  }\n\n  isOutOfBounds(pos) {\n   return (pos[0] < 0) || (pos[1] < 0) ||\n     (pos[0] > this.width) || (pos[1] > this.height);\n }\n\n  allObjects() {\n    return [].concat(this.players, this.dragonBalls, this.bullets, this.enemies, this.enemyBullets, this.sensuBeans);\n  }\n\n  draw() {\n    this.background.draw(this.ctx);\n    this.hp.draw(this.ctx);\n    this.score.draw(this.ctx);\n    this.allObjects().forEach( obj => {\n      obj.draw(this.ctx);\n    });\n  }\n\n  addDragonBalls() {\n    for (var i = 0; i < this.NUM_DRAGON_BALLS; i++) {\n      this.add(new DragonBall( { pos: randomPosition(this.width, this.height), game: this, ctx: this.ctx , score: this.score}) );\n    }\n  }\n\n  addEnemies() {\n    const score = this.score.points;\n    if (score <= 500){\n      for (var i = 0; i < 2; i++) {\n        this.add(new Enemy( { pos: randomPosition(this.width, 200), ctx: this.ctx, game: this, goku: this.goku, vel: [0.7,0.7] }) );\n      }\n      return;\n    } else if ( score <= 1000){\n      for (var j = 0; j < 2; j++) {\n        this.add(new Krillin( { pos: randomPosition(this.width, 200), ctx: this.ctx, game: this, goku: this.goku, vel: [1.1,1.1] }) );\n      }\n      return;\n    } else if ( score <= 1500){\n      for (var k = 0; k < 2; k++) {\n        this.add(new MajinBu( { pos: randomPosition(this.width, 200), ctx: this.ctx, game: this, goku: this.goku, vel: [1.3,1.3] }) );\n      }\n      return;\n    } else  {\n      for (var l = 0; l < 2; l++) {\n        this.add(new Freiza( { pos: randomPosition(this.width, 200), ctx: this.ctx, game: this, goku: this.goku, vel: [1.5,1.5] }) );\n      }\n    }\n  }\n\n  step() {\n    this.checkCollisions();\n    this.spawnDragonBalls();\n    this.addSensuBean();\n    this.spawnEnemies();\n    this.allObjects().forEach( obj => {\n      obj.move();\n    });\n  }\n\n  spawnDragonBalls() {\n    if ( this.dragonBalls.length <= 0 ) {\n      this.addDragonBalls();\n    }\n  }\n\n  spawnEnemies() {\n    if (this.enemies.length <= 0) {\n      this.addEnemies();\n    }\n  }\n\n  wrap(pos) {\n    return [\n      wrap(pos[0], 900), wrap(pos[1], 800)\n    ];\n  }\n\n}\n\nexport default Game;\n","\nclass GameView {\n  constructor(game, ctx){\n    this.game = game;\n    this.goku = game.goku;\n    this.ctx = ctx;\n    this.play = true;\n    this.bindKeyHandlers();\n  }\n\n\n  bindKeyHandlers(){\n    key('p', () => {\n      this.changePlayBoolean();\n   });\n\n    key('n', () => {\n      this.restartGame();\n   });\n  }\n\n  changePlayBoolean(){\n    if (this.play === true){\n      this.play = false;\n    } else {\n      this.play = true;\n      this.animate();\n    }\n  }\n\n  start() {\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n\n  animate(time) {\n    if (this.play === true && this.goku.lives > 0){\n      this.animateFrames(time);\n    }\n   }\n\n   animateFrames(time) {\n     const timeDelta = time - this.lastTime;\n     this.game.step(timeDelta);\n     this.game.draw(this.ctx);\n     this.lastTime = time;\n     // every call to animate requests causes another call to animate\n     requestAnimationFrame(this.animate.bind(this));\n   }\n}\n\n\n\nexport default GameView;\n\n//setTimeout example\n// import Instructions from './Instructions';\n//\n//\n// class GameView {\n//   constructor(game, ctx){\n//     this.game = game;\n//     this.ctx = ctx;\n//     this.instructions = new Instructions(this.ctx);\n//   }\n//\n//   start() {\n//     this.startInstructions(this.ctx);\n//\n//     setTimeout(() => {\n//       this.lastTime = 0;\n//       requestAnimationFrame(this.animate.bind(this));\n//     }, 3000);\n//   }\n//\n//   startInstructions(){\n//     this.instructions.draw(this.ctx);\n//   }\n//\n//\n//   // setTimeout() {\n//   //  setTimeout(() => {\n//   //  const timeDelta = time - this.lastTime;\n//   //  this.game.step(timeDelta);\n//   //  this.game.draw(this.ctx);\n//   //  this.lastTime = time;\n//   //  // every call to animate requests causes another call to animate\n//   //  requestAnimationFrame(this.animate.bind(this));\n//   //  }, 20000);\n//   // }\n//\n//\n// }\n//\n//\n//\n// export default GameView;\n","import DragonBall from './dragon_ball';\nimport Bullet from './bullet';\nimport * as Util from './util';\nimport MovingObject from './moving_object';\nimport EnemyBullet from './enemy_bullet';\nimport SensuBean from './sensu_bean';\nimport SpirtBomb from './spirt_bomb';\nimport Score from './score';\nimport KrillinBullet from './krillin_bullet';\nimport FreizaBullet from './freiza_bullet';\nimport Enemy from './enemy';\n\nclass Goku extends MovingObject {\n  constructor(options) {\n    options.radius = 30;\n    options.vel = [0,0];\n    super(options);\n    this.ctx = options.ctx;\n    this.sX = 0;\n    this.score = options.score;\n    this.isWrappable = false;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/reg_goku.png';\n    this.superGoku = new Image();\n    this.superGoku.src = 'assets/images/supersaiyan-goku.png';\n    this.game = options.game;\n    this.bindKeyHandlers();\n    this.lives = 3;\n  }\n\n  bindKeyHandlers() {\n    key('w', () => {\n      this.vel = [0, -6];\n      // this.pos[1] -= 40;\n      this.move();\n    });\n\n    key('s', () => {\n      this.vel = [0, 6];\n      // this.pos[1] += 40;\n      this.move();\n    });\n\n    key('a', () => {\n      this.vel = [-6, 0];\n      // this.pos[0] -= 40;\n      this.move();\n    });\n\n    key('d', () => {\n      this.vel = [6, 0];\n      // this.pos[0] += 40;\n\n      this.move();\n    });\n\n    key('j', () => {\n      this.fireBullet();\n    });\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    window.frames += 30;\n    this.pos = this.game.wrap(this.pos);\n  }\n\n  draw() {\n\n    // switch(window.frames) {\n    //   case 0:\n    //   this.sX = 0;\n    //   break;\n    //   case 600:\n    //   this.sX = 1200;\n    //   break;\n    //   case 1200:\n    //   this.sX = 0;\n    //   window.frames = 0;\n    //   break;\n    //   default:\n    //   break;\n    // }\n    // if (window.frames > 1200){\n    //   window.frames = 0;\n    // }\n    if (this.score.points >= 1750) {\n      this.ctx.drawImage(this.superGoku, this.sX , 0, 800, 800, this.pos[0] - 50, this.pos[1] -40 , 700, 700);\n    } else {\n      this.ctx.drawImage(this.image, this.sX , 0, 800, 800, this.pos[0] - 50, this.pos[1] -70 , 700, 700);\n    }\n  }\n\n  isCollidedWith(otherObj) {\n     const centerDist = Util.dist(this.pos, otherObj.pos);\n     return centerDist < this.radius + otherObj.radius;\n   }\n\n  fireBullet() {\n    if (this.score.dragonBalls != 0){\n      if (this.score.points >= 1750){\n        const spirtBomb = new SpirtBomb( {pos: this.pos, vel: [0,-6], ctx: this.ctx, game: this.game } );\n        this.game.add(spirtBomb);\n      } else {\n        const bullet = new Bullet( {pos: this.pos, vel: [0,-6], ctx: this.ctx, game: this.game } );\n        this.game.add(bullet);\n      }\n      this.score.dragonBalls -= 1;\n    }\n  }\n\n  collideWith(otherObj) {\n    if (otherObj instanceof EnemyBullet || otherObj instanceof Enemy){\n\n      this.lives-= 1;\n    } else if (otherObj instanceof SensuBean && this.lives <= 2){\n      this.lives++;\n    } else if (otherObj instanceof DragonBall){\n      this.score.dragonBalls += 1;\n    }\n    otherObj.remove();\n  }\n\n}\n\n\n\n\nexport default Goku;\n","class Hp {\n  constructor(player){\n    this.player = player;\n  }\n\n  draw(ctx) {\n    ctx.fillText(\"HP: \"+this.player.lives , 750, 40);\n  }\n}\n\nexport default Hp;\n","\nclass Instructions {\n  constructor(options){\n    this.ctx = options.ctx;\n    this.goku = options.goku;\n    this.image = new Image();\n    this.image.src = 'assets/images/aura_goku.png';\n    this.text = new Image();\n    this.text.src = 'assets/images/intro_text.png';\n  }\n\n  draw(ctx) {\n      ctx.clearRect(0,0, 900, 600);\n      ctx.fillStyle = 'yellow';\n      this.ctx.fillRect(0,0,900,600);\n      this.ctx.drawImage(this.text, 10, 10);\n      this.ctx.drawImage(this.image, 300, 10);\n  }\n\n\n\n\n}\n\nexport default Instructions;\n","import DragonBall from './dragon_ball';\nimport KrillinBullet from './krillin_bullet';\nimport MovingObject from './moving_object';\nimport * as Util from './util';\nimport Enemy from './enemy';\nimport SensuBean from './sensu_bean';\n\nclass Krillin extends Enemy {\n  constructor(options) {\n    options.radius = 30;\n    super(options);\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.pos = options.pos;\n    this.sX = 0;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/krillin.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n    this.game = options.game;\n    this.goku = options.goku;\n    this.sX = 0;\n  }\n\n  fireBullet() {\n    const bullet = new KrillinBullet( {pos: this.pos, vel: [0,3], ctx: this.ctx, game: this.game } );\n    this.game.add(bullet);\n  }\n\n  draw(ctx) {\n    switch(window.frames1) {\n      case 170:\n      this.fireBullet();\n      break;\n      default:\n      break;\n    }\n    if (window.frames1 > 170){\n      window.frames1 = 0;\n    }\n    this.ctx.drawImage(this.image, this.sX, 0, 800, 800, this.pos[0] -35  , this.pos[1] - 60 , 450, 450);\n  }\n}\n\nexport default Krillin;\n","import DragonBall from './dragon_ball';\nimport MovingObject from './moving_object';\nimport * as Util  from \"./util\";\nimport EnemyBullet from './enemy_bullet';\n\nclass KrillinBullet extends EnemyBullet {\n  constructor(options){\n    options.radius = 40;\n    super(options);\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.isWrappable = false;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/krillen_bullet.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 50 , this.pos[1] - 30 , 850, 950);\n  }\n}\n\nexport default KrillinBullet;\n","import DragonBall from './dragon_ball';\nimport EnemyBullet from './enemy_bullet';\nimport MovingObject from './moving_object';\nimport * as Util from './util';\nimport Enemy from './enemy';\nimport SensuBean from './sensu_bean';\n\nclass MajinBu extends Enemy {\n  constructor(options) {\n    options.radius = 25;\n    super(options);\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.pos = options.pos;\n    this.sX = 0;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = 'assets/images/buu.png';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n    this.game = options.game;\n    this.goku = options.goku;\n    this.sX = 0;\n  }\n\n  draw(ctx) {\n    switch(window.frames1) {\n      case 170:\n      this.fireBullet();\n      break;\n      default:\n      break;\n    }\n    if (window.frames1 > 170){\n      window.frames1 = 0;\n    }\n    this.ctx.drawImage(this.image, this.sX, 0, 1000, 1000, this.pos[0] -30 , this.pos[1] - 70 , 650, 850);\n  }\n}\n\nexport default MajinBu;\n","import * as Util  from \"./util\";\n\nconst DEFAULTS = {\n  COLOR: \"#505050\",\n  RADIUS: 25,\n};\n\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel || Util.randomVec(2);\n    this.radius = options.radius || DEFAULTS.RADIUS;\n    this.color = DEFAULTS.COLOR;\n    this.game = options.game;\n    this.ctx = options.ctx;\n    this.sX = 0;\n    this.isWrappable = true;\n  }\n\n  draw(ctx) {\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += Math.abs(this.vel[1]);\n    if (this.game.isOutOfBounds(this.pos)) {\n       if (this.isWrappable) {\n         this.pos = this.game.wrap(this.pos);\n       } else {\n         this.remove();\n       }\n     }\n  }\n\n  isCollidedWith(otherObj) {\n     const centerDist = Util.dist(this.pos, otherObj.pos);\n     return centerDist < this.radius + otherObj.radius;\n   }\n\n   collideWith(otherObj) {\n     otherObj.remove();\n   }\n\n   remove(){\n     this.game.remove(this);\n   }\n\n\n\n}\n\n\n\nexport default MovingObject;\n","class Score {\n  constructor(score){\n    this.dragonBalls = score;\n    this.points = 0;\n  }\n\n  draw(ctx) {\n    ctx.fillText(\"Dragon-Balls: \"+this.dragonBalls , 325, 40);\n    ctx.font = \"36px Impact\";\n    ctx.fillStyle = \"yellow\";\n    ctx.fillText(\"Score: \"+this.points ,15, 40);\n    this.points++;\n  }\n}\n\nexport default Score;\n","import MovingObject from './moving_object';\nclass SensuBean extends MovingObject {\n  constructor(options){\n    super(options);\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.isWrappable = false;\n    this.image = new Image();\n    this.game = options.game;\n    this.image.src = 'assets/images/sensju.jpg';\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1200, 1200, this.pos[0] - 50 , this.pos[1] - 30 , 250, 250);\n  }\n}\n\nexport default SensuBean;\n","import DragonBall from './dragon_ball';\nimport MovingObject from './moving_object';\nimport * as Util  from \"./util\";\nimport Bullet from './bullet';\n\n\nclass SpirtBomb extends Bullet {\n  constructor(options){\n    options.radius = 50;\n    super(options);\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.ctx = options.ctx;\n    this.isWrappable = false;\n    this.game = options.game;\n    this.image = new Image();\n    this.image.src = './assets/images/spirit-bomb.jpg';\n    this.image.onload= () => {\n      this.ctx.drawImage(this.image, this.pos[0], this.pos[1]);\n    };\n  }\n\n  draw(ctx) {\n    this.ctx.drawImage(this.image, this.sX, 0, 1000, 1000, this.pos[0] - 50  , this.pos[1] - 70 , 650, 650);\n  }\n}\n\n\n\nexport default SpirtBomb;\n","\n/// in charge of giving direction\nexport const randomVec = (length) => {\n  const deg = 2 * Math.PI * Math.random();\n  return scale([Math.sin(deg), Math.cos(deg)], length);\n};\n//\n// export const test = function() {\n//   console.log(\"Hello\");\n// };\n//\nexport const scale = (vec, m) => {\n  return [vec[0] * m, vec[1] * m];\n};\n//\n// // Normalize the length of the vector to 1, maintaining direction.\n// export const dir = vec => {\n//   const normVec = norm(vec);\n//   return scale(vec, 1 / normVec);\n// };\n//\n//\n// // Find the length of the vector.\n// export const norm = vec => {\n//   return dist([0,0], vec);\n// };\n//\n//\n\nexport const randomPosition = (maxX, maxY) => {\n  const x = maxX * Math.random();\n  const y = maxY * 0.5 * Math.random();\n  return [x, y];\n};\n\n// export const randomPosition = (maxX, maxY) => {\n//   const x = (maxX * 2 * Math.random()) - maxX;\n//   const y = (maxY * Math.random()) - maxY * 0.5;\n//   return [x, y];\n// };\n\nexport const wrap = (coord, max) => {\n  if (coord < 0){\n    return 900;\n  } else if (coord > max) {\n    return coord % max;\n  } else {\n    return coord;\n  }\n};\n//\n/// finds the distance between two objects\nexport const dist = (pos1, pos2) => {\n  return Math.sqrt(\n    Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    // doing the same thing as\n    // let dx = pos1[0] - pos2[0]\n    // let dy = pos1[1] - pos2[1]\n    //\n    // Math.sqrt((dx * dx) + (dy * dy))\n  );\n};\n"],"sourceRoot":""}